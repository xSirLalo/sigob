<?php

namespace DoctrineORMModule\Proxy\__CG__\Catastro\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Contribuyente extends \Catastro\Entity\Contribuyente implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'idContribuyente', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'cvePersona', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'nombre', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'apellidoPaterno', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'apellidoMaterno', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'rfc', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'curp', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'razonSocial', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'correo', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'telefono', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'genero', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'createdAt', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'updatedAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'idContribuyente', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'cvePersona', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'nombre', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'apellidoPaterno', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'apellidoMaterno', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'rfc', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'curp', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'razonSocial', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'correo', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'telefono', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'genero', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'createdAt', '' . "\0" . 'Catastro\\Entity\\Contribuyente' . "\0" . 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Contribuyente $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdContribuyente()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getIdContribuyente();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdContribuyente', []);

        return parent::getIdContribuyente();
    }

    /**
     * {@inheritDoc}
     */
    public function setCvePersona($cvePersona = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCvePersona', [$cvePersona]);

        return parent::setCvePersona($cvePersona);
    }

    /**
     * {@inheritDoc}
     */
    public function getCvePersona()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCvePersona', []);

        return parent::getCvePersona();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombre($nombre = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombre', [$nombre]);

        return parent::setNombre($nombre);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombre', []);

        return parent::getNombre();
    }

    /**
     * {@inheritDoc}
     */
    public function setApellidoPaterno($apellidoPaterno = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApellidoPaterno', [$apellidoPaterno]);

        return parent::setApellidoPaterno($apellidoPaterno);
    }

    /**
     * {@inheritDoc}
     */
    public function getApellidoPaterno()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApellidoPaterno', []);

        return parent::getApellidoPaterno();
    }

    /**
     * {@inheritDoc}
     */
    public function setApellidoMaterno($apellidoMaterno = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApellidoMaterno', [$apellidoMaterno]);

        return parent::setApellidoMaterno($apellidoMaterno);
    }

    /**
     * {@inheritDoc}
     */
    public function getApellidoMaterno()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApellidoMaterno', []);

        return parent::getApellidoMaterno();
    }

    /**
     * {@inheritDoc}
     */
    public function setRfc($rfc = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRfc', [$rfc]);

        return parent::setRfc($rfc);
    }

    /**
     * {@inheritDoc}
     */
    public function getRfc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRfc', []);

        return parent::getRfc();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurp($curp = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurp', [$curp]);

        return parent::setCurp($curp);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurp', []);

        return parent::getCurp();
    }

    /**
     * {@inheritDoc}
     */
    public function setRazonSocial($razonSocial = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRazonSocial', [$razonSocial]);

        return parent::setRazonSocial($razonSocial);
    }

    /**
     * {@inheritDoc}
     */
    public function getRazonSocial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRazonSocial', []);

        return parent::getRazonSocial();
    }

    /**
     * {@inheritDoc}
     */
    public function setCorreo($correo = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCorreo', [$correo]);

        return parent::setCorreo($correo);
    }

    /**
     * {@inheritDoc}
     */
    public function getCorreo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCorreo', []);

        return parent::getCorreo();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelefono($telefono = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelefono', [$telefono]);

        return parent::setTelefono($telefono);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelefono()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelefono', []);

        return parent::getTelefono();
    }

    /**
     * {@inheritDoc}
     */
    public function setGenero($genero)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGenero', [$genero]);

        return parent::setGenero($genero);
    }

    /**
     * {@inheritDoc}
     */
    public function getGenero()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGenero', []);

        return parent::getGenero();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

}
